/**
 * test class for GameOfThrons all
 * @author Alexander Gusak
 */

@isTest(SeeAllData=false)
private class HeroGameOfThronsTest {
   
    @isTest
    static  void positiveCaseTeste(){
        GameOfThrons testGame= new GameOfThrons();
         // check how create hero from page
         testGame.saveCreateHero();//for  createHeroPage==true
         testGame.createNewHero= new HeroHome__c(nameHero__c='testHero1',hpHero__c=10000,maxDamadge__c=80,minDamadge__c=40);
         testGame.saveCreateHero();
         testGame.saveCreateHero();//for  createHeroPage==true
         testGame.createNewHero= new HeroHome__c(nameHero__c='testHero2',hpHero__c=10000,maxDamadge__c=80,minDamadge__c=40);
         testGame.saveCreateHero();
        // read test hero 
         HeroGameOfThrons TestHero1= new HeroGameOfThrons([SELECT nameHero__c, hpHero__c,minDamadge__c,maxDamadge__c,expHero__c,lvlHero__c 
                                                           FROM HeroHome__c 
                                                           WHERE nameHero__c='testHero1']);
         HeroGameOfThrons TestHero2= new HeroGameOfThrons([SELECT nameHero__c, hpHero__c,minDamadge__c,maxDamadge__c,expHero__c,lvlHero__c 
                                                           FROM HeroHome__c 
                                                           WHERE nameHero__c='testHero2']);
         // jast try method use
         testGame.updatePage();
         testGame.choiceHeroInBattle();
         testGame.deleteHero();
         
         system.assertNotEquals(null, TestHero1);
         system.assertNotEquals(null, TestHero2);
         
         testGame.choice= new List<HeroHome__c>([SELECT nameHero__c, hpHero__c,minDamadge__c,maxDamadge__c,expHero__c,lvlHero__c 
                                                           FROM HeroHome__c 
                                                           WHERE nameHero__c='testHero2' OR nameHero__c='testHero1']);
         // check batle
         testGame.fight(TestHero1, TestHero2);
         // check if battle is done
         System.assertEquals(new List<HeroGameOfThrons>{TestHero1,TestHero2}, testGame.listHeroEndBattle);
         
        
        
        
    }
        


}